name: Deploy React App
on: push 
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get source code from GitHub
        uses: actions/checkout@v4 
      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          path: ~/.npm 
          key: node_modules-${{ hashFiles('**/package-lock.json') }} 
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get source code from GitHub
        uses: actions/checkout@v4 
      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          path: ~/.npm 
          key: node_modules-${{ hashFiles('**/package-lock.json') }} 
      - name: Install dependencies
        run: npm install 
      - name: Liny application
        run: npm run lint
  build:
    needs: [lint, test]
    # не отменяем остальные шаги если сбора НЕудалась
    continue-on-error: true
    # сборка на разных вариантах nodeJS & OS
    strategy:
      matrix:
        # имена списка задаем сами, чтобы могли потом по ним обращаться
        node-version: [14, 16]
        os: [ubuntu-latest, windows-latest]
    # настраиваем запуск по матрице
    # количество запусков job зависит от количества переменных в матрице по ключу os
    runs-on: ${{ matrix.os }} # matrix - специальный ключ, который доступен внутри матрицы
    steps:
      - name: Get source code from GitHub
        uses: actions/checkout@v4 
      # устанавливаем конкретную версию nodeJS для работы с проектом
      - name: Install NodeJs ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          path: ~/.npm 
          key: node_modules-${{ hashFiles('**/package-lock.json') }}}} 
      - name: Install dependencies
        run: npm install 
      - name: Build application
        run: npm run build
      - name: Deploy
        run: echo Deploying...
  